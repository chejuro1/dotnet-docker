name: Build, Push Docker Image and Deploy to AKS

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker Image
        run: |
          cd samples/aspnetapp
          dotnet --version
          dotnet --info
          docker build -t ${{ secrets.DOCKER_USERNAME }}/dotnet:${{ github.sha }} .

      # Push the Docker image to Docker Hub
      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/dotnet:${{ github.sha }}

      # Optionally tag the image with "latest"
      - name: Tag Docker Image with latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKER_USERNAME }}/dotnet:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/dotnet:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/dotnet:latest

  deploy_to_aks:
    runs-on: ubuntu-latest
    needs: build_and_push
    environment: 
      name: deploy

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Azure CLI using service principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Get AKS credentials
      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group aks --name myakscluster

      # Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes
          kubectl get  all 
          kubectl describe svc docker-dotnet
          kubectl delete deploy mongo
